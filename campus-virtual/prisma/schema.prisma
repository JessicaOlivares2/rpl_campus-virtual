// prisma/schema.prisma

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Enum para los roles de los usuarios
enum Role {
  STUDENT // Alumno
  TEACHER // Docente
}

// Nuevo modelo para las comisiones, que gestiona el código de registro
model Commission {
  id               Int      @id @default(autoincrement())
  name             String   // Por ejemplo: "3A" o "3B"
  registrationCode String   @unique // El código que los alumnos usan para registrarse
  students         User[]   // Lista de alumnos en esta comisión
  courses          Course[] // Cursos asignados a esta comisión
}

// Modelo principal para los usuarios de la plataforma
model User {
  id               Int          @id @default(autoincrement())
  email            String       @unique
  password         String       // Contraseña hasheada
  
  name             String?
  lastName         String?
  DNI              String?      @unique
  birthDate        DateTime?

  role             Role         @default(STUDENT)
  coursesCreated   Course[]     @relation("CoursesTaught") // Cursos que un docente ha creado
  
  // Relación con el nuevo modelo de Comisión
  commissionId     Int?
  commission       Commission?  @relation(fields: [commissionId], references: [id])
  
  // La relación de alumnos a cursos ahora se maneja a través de la comisión
  coursesJoined    Course[]     @relation("CoursesEnrolled")
  
  submissions      Submission[]
}

// Modelo para los cursos
model Course {
  id               Int          @id @default(autoincrement())
  title            String
  description      String
  teacherId        Int
  teacher          User         @relation("CoursesTaught", fields: [teacherId], references: [id])
  
  // Relación con las comisiones
  commissions      Commission[]
  
  // La relación de alumnos a cursos ahora se maneja a través de la comisión
  students         User[]       @relation("CoursesEnrolled")

  assignments      Assignment[] // Ejercicios en este curso
}

// Modelo para las tareas o asignaciones
model Assignment {
  id               Int          @id @default(autoincrement())
  title            String
  description      String
  courseId         Int
  course           Course       @relation(fields: [courseId], references: [id])
  submissions      Submission[] // Relación con las entregas de los alumnos
}

// Modelo para las entregas de los alumnos
model Submission {
  id               Int          @id @default(autoincrement())
  submissionUrl    String       // URL de la entrega
  submittedAt      DateTime     @default(now())
  status           String?      // Por ejemplo: 'Completado', 'Pendiente', 'Calificado'
  studentId        Int
  student          User         @relation(fields: [studentId], references: [id])
  assignmentId     Int
  assignment       Assignment   @relation(fields: [assignmentId], references: [id])
}